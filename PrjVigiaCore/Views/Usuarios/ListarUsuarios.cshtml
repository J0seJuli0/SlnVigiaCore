@model List<dynamic>
@{
    ViewData["Title"] = "Todos los Usuarios";
}

<style>
    .table-container {
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    #tablaUsuarios {
        min-width: 1000px;
        width: 100% !important;
    }

    .avatar-container {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .avatar-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
        border: 2px solid #e9ecef;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
        transition: background-color 0.2s ease;
    }

    /* Estilos mejorados para DataTables */
    .dataTables_wrapper .dataTables_filter input {
        border: 1px solid #dee2e6;
        border-radius: 20px;
        padding: 5px 15px;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.075);
        transition: all 0.3s;
    }

        .dataTables_wrapper .dataTables_filter input:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            outline: 0;
        }

    .dataTables_wrapper .dataTables_length select {
        border: 1px solid #dee2e6;
        border-radius: 5px;
        padding: 3px 10px;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button {
        border: 1px solid transparent;
        border-radius: 5px;
        padding: 5px 10px;
        margin: 0 2px;
        transition: all 0.3s;
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #e9ecef;
            border-color: #dee2e6;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current {
            background: #0d6efd;
            color: white !important;
            border-color: #0d6efd;
        }

    .dataTables_wrapper .dataTables_info {
        padding-top: 8px;
        color: #6c757d;
    }

    .dt-buttons .btn {
        border-radius: 20px;
        padding: 5px 15px;
        margin-right: 5px;
        font-size: 0.8rem;
    }

    #btnRefresh {
        border-radius: 20px;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-action {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .avatar-container {
        display: inline-block;
        transition: transform 0.3s ease;
    }

        .avatar-container:hover {
            transform: scale(1.05);
        }

    .avatar-img {
        max-width: 100px;
        max-height: 100px;
        object-fit: cover;
        border: 2px solid #ddd;
        transition: all 0.3s ease;
    }

        .avatar-img:hover {
            border-color: #0d6efd;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
</style>

<div class="card shadow border-0 rounded-3">
    <div class="card-header bg-primary bg-gradient text-white">
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="mb-0">
                <i class="fas fa-users me-2"></i> @ViewData["Title"]
            </h3>
            <div class="d-flex gap-2 align-items-center">
                <span class="badge bg-white text-primary shadow-sm d-flex align-items-center py-2"
                      data-bs-toggle="tooltip"
                      data-bs-placement="top"
                      title="Total de registos Cargados."
                      style="min-width: fit-content;">
                    <i class="fas fa-database me-1 d-none d-sm-inline"></i>
                    <span class="d-none d-sm-inline">Total:</span>
                    <span class="ms-sm-1">@ViewBag.TotalRegistros</span>
                    <span class="d-none d-md-inline ms-sm-1">Registros</span>
                </span>
                <button id="btnRefresh" class="btn btn-light btn-sm" title="Actualizar lista">
                    <i class="fas fa-sync-alt"></i>
                </button>
                <button id="btnAddClient" class="btn btn-success btn-sm" title="Agregar nuevo usuario" data-bs-toggle="modal" data-bs-target="#registrarUsuarioModal">
                    <i class="fas fa-plus me-1"></i> Nuevo
                </button>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i> @ViewBag.Error
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <div class="table-container">
            <div class="table-responsive">
                <table id="tablaUsuarios" class="table table-hover table-striped w-100">
                    <thead>
                        <tr>
                            <th style="display: none;">Código</th>
                            <th>DNI</th>
                            <th>Foto</th>
                            <th>Nombre</th>
                            <th>Usuario</th>
                            <th>Edad</th>
                            <th>Género</th>
                            <th>Grupos Asignados</th>
                            <th>Email</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var emp in Model)
                        {
                            <tr>
                                <td style="display: none;">@emp.ID_EMPLEADO</td>
                                <td>@emp.DNI</td>
                                <td style="width: 60px; min-width: 60px; max-width: 60px; text-align: center;">
                                    @if (!string.IsNullOrEmpty((string)emp.IMAGE_PATH))
                                    {
                                        <div class="avatar-container" style="width: 50px; height: 50px; margin: 0 auto;">
                                            <img src="@emp.IMAGE_PATH" alt="Foto"
                                                 class="avatar-img"
                                                 style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%; border: 2px solid #e9ecef;">
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="avatar-placeholder"
                                             style="width: 50px; height: 50px; border-radius: 50%; background-color: #f8f9fa;
                                                display: flex; align-items: center; justify-content: center; margin: 0 auto;
                                                border: 2px solid #e9ecef; color: #6c757d;">
                                            <i class="fas fa-user"></i>
                                        </div>
                                    }
                                </td>
                                <td style="width: 150px; max-width: 160px; min-width: 160px; overflow: hidden; text-overflow: ellipsis;">
                                    <div style="display: inline-block; vertical-align: middle; max-width: 100%;">
                                        <strong style="display: block; overflow: hidden; text-overflow: ellipsis; white-space: normal; word-wrap: break-word;">@emp.NOMBRE_COMPLETO</strong>
                                    </div>
                                </td>
                                <td>@emp.USUARIO</td>
                                <td title="Dato no asignado">@(emp.EDAD?.ToString() ?? "N/A")</td>
                                <td title="Dato no asignado">@(emp.GENERO ?? "N/A")</td>

                                <td>
                                    @if (!string.IsNullOrEmpty((string)emp.GRUPOS_ASIGNADOS))
                                    {
                                        foreach (var grupo in ((string)emp.GRUPOS_ASIGNADOS).Split(','))
                                        {
                                            <span class="badge bg-primary me-1 mb-1">@grupo.Trim()</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">SIN GRUPO</span>
                                    }
                                </td>
                                <td>
                                    <a href="mailto:@emp.EMAIL" class="text-primary">@emp.EMAIL</a>
                                </td>
                                <td>
                                    <span class="badge bg-success">Activo</span>
                                </td>
                                <td class="text-center">
                                    <button class="action-btn btn btn-sm btn-view" data-id="@emp.ID_EMPLEADO" title="Ver">
                                        <i class="fas fa-eye"></i>
                                    </button>

                                    <button class="action-btn btn btn-sm btn-edit" data-id="@emp.ID_EMPLEADO" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </button>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!--MODAL PARA EDITAR USUARIO-->
<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="modalEditarLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="modalEditarLabel">Editar Empleado</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body">
                <form id="formEditarEmpleado">

                    <input type="hidden" id="txtIdEmpleado" name="idEmpleado">

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="txtDni" class="form-label">DNI</label>
                            <input type="text" class="form-control" id="txtDni" disabled>
                        </div>
                        <div class="col-md-4">
                            <label for="txtTelefono" class="form-label">Teléfono</label>
                            <input type="text" class="form-control" id="txtTelefono">
                        </div>
                        <div class="col-md-4">
                            <label for="cboGenero" class="form-label">Género</label>
                            <select class="form-select" id="cboGenero">
                                <option value="">Seleccione</option>
                                <option value="M">Masculino</option>
                                <option value="F">Femenino</option>
                            </select>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="txtNombres" class="form-label">Nombres</label>
                            <input type="text" class="form-control" id="txtNombres" disabled>
                        </div>
                        <div class="col-md-4">
                            <label for="txtApePat" class="form-label">Apellido Paterno</label>
                            <input type="text" class="form-control" id="txtApePat" disabled>
                        </div>
                        <div class="col-md-4">
                            <label for="txtApeMat" class="form-label">Apellido Materno</label>
                            <input type="text" class="form-control" id="txtApeMat" disabled>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="txtFechaNacimiento" class="form-label">Fecha Nacimiento</label>
                            <input type="date" class="form-control" id="txtFechaNacimiento">
                        </div>
                        <div class="col-md-4">
                            <label for="txtEstadoCivil" class="form-label">Estado Civil</label>
                            <input type="text" class="form-control" id="txtEstadoCivil">
                        </div>
                        <div class="col-md-4">
                            <label for="txtUsuario" class="form-label">Usuario</label>
                            <input type="text" class="form-control" id="txtUsuario">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="txtEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="txtEmail">
                        </div>
                        <div class="col-md-4">
                            <div class="col-md-6 mb-3">
                                <label for="idRol" class="form-label fw-semibold">Rol <span class="text-danger">*</span></label>
                                <select class="form-select form-select-sm" id="idRol" name="idRol" required>
                                    <option value="">Seleccione...</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label for="imagenEditar" class="form-label">Foto</label>
                            <input type="file" class="form-control" id="imagenEditar" accept="image/*">
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4">
                            <label for="txtDireccion" class="form-label">Dirección</label>
                            <input type="text" class="form-control" id="txtDireccion">
                        </div>

                        <div class="col-md-4">
                            <label for="txtDepartamento" class="form-label">Departamento</label>
                            <input type="text" class="form-control" id="txtDepartamento">
                        </div>
                        <div class="col-md-4">
                            <label for="txtProvincia" class="form-label">Provincia</label>
                            <input type="text" class="form-control" id="txtProvincia">
                        </div>
                        <div class="col-md-4">
                            <label for="txtDistrito" class="form-label">Distrito</label>
                            <input type="text" class="form-control" id="txtDistrito">
                        </div>
                    </div>

                    <div class="mb-3 text-center">
                        <label class="form-label">Previsualización de Foto</label>
                        <div>
                            <img id="previewImagen" src="" alt="Sin imagen" style="max-height: 150px; border-radius: 8px; display: none; border: 1px solid #ddd;">
                        </div>
                    </div>

                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="btnGuardarCambios">Guardar Cambios</button>
            </div>

        </div>
    </div>
</div>


<!-- MODAL PARA REGISTRAR USUARIO -->
<div class="modal fade" id="registrarUsuarioModal" tabindex="-1" aria-labelledby="registrarUsuarioModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" style="max-width: 80%;">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title fs-4 fw-bold">
                    <i class="fas fa-user-plus me-2"></i>Registrar Nuevo Usuario
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>


            <form id="registrarUsuarioForm" enctype="multipart/form-data">
                <input type="hidden" id="tipo" name="tipo" value="1">
                <div class="modal-body p-4">
                    <div class="row g-4">
                        <!-- Datos Personales -->
                        <div class="col-md-4">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-header bg-light">
                                    <h6 class="mb-0 fw-bold text-primary">
                                        <i class="fas fa-id-card me-2"></i>Datos Personales
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label for="dni" class="form-label fw-semibold">DNI <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control form-control-sm" id="dni" name="dni" required maxlength="8" placeholder="Ingrese DNI">
                                    </div>
                                    <div class="mb-3">
                                        <label for="nombres" class="form-label fw-semibold">Nombres <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control form-control-sm" id="nombres" name="nombres" required placeholder="Nombres completos">
                                    </div>
                                    <div class="mb-3">
                                        <label for="apePat" class="form-label fw-semibold">Apellido Paterno <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control form-control-sm" id="apePat" name="apePat" required placeholder="Apellido paterno">
                                    </div>
                                    <div class="mb-3">
                                        <label for="apeMat" class="form-label">Apellido Materno</label>
                                        <input type="text" class="form-control form-control-sm" id="apeMat" name="apeMat" placeholder="Apellido materno">
                                    </div>
                                    <div class="mb-3">
                                        <label for="fechaNacimiento" class="form-label">Fecha de Nacimiento</label>
                                        <input type="date" class="form-control form-control-sm" id="fechaNacimiento" name="fechaNacimiento">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Género</label>
                                        <div class="d-flex gap-3">
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="genero" id="generoM" value="M">
                                                <label class="form-check-label" for="generoM">Masculino</label>
                                            </div>
                                            <div class="form-check">
                                                <input class="form-check-input" type="radio" name="genero" id="generoF" value="F">
                                                <label class="form-check-label" for="generoF">Femenino</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="estadoCivil" class="form-label">Estado Civil</label>
                                        <select class="form-select form-select-sm" id="estadoCivil" name="estadoCivil">
                                            <option value="">Seleccione...</option>
                                            <option value="Soltero">Soltero/a</option>
                                            <option value="Casado">Casado/a</option>
                                            <option value="Divorciado">Divorciado/a</option>
                                            <option value="Viudo">Viudo/a</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Contacto -->
                        <div class="col-md-4">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-header bg-light">
                                    <h6 class="mb-0 fw-bold text-primary">
                                        <i class="fas fa-phone-alt me-2"></i>Contacto
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label for="telefono" class="form-label fw-semibold">Teléfono <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control form-control-sm" id="telefono" name="telefono" required maxlength="11" placeholder="Ej. 987654321">
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label fw-semibold">Correo Electrónico <span class="text-danger">*</span></label>
                                        <input type="email" class="form-control form-control-sm" id="email" name="email" required placeholder="correo@ejemplo.com">
                                    </div>
                                    <div class="mb-3">
                                        <label for="direccion" class="form-label">Dirección</label>
                                        <textarea class="form-control form-control-sm" id="direccion" name="direccion" rows="2" placeholder="Dirección completa"></textarea>
                                    </div>
                                    <div class="row g-2">
                                        <div class="col-md-4 mb-3">
                                            <label for="departamento" class="form-label">Departamento</label>
                                            <input type="text" class="form-control form-control-sm" id="departamento" name="departamento">
                                        </div>
                                        <div class="col-md-4 mb-3">
                                            <label for="provincia" class="form-label">Provincia</label>
                                            <input type="text" class="form-control form-control-sm" id="provincia" name="provincia">
                                        </div>
                                        <div class="col-md-4 mb-3">
                                            <label for="distrito" class="form-label">Distrito</label>
                                            <input type="text" class="form-control form-control-sm" id="distrito" name="distrito">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="imagen" class="form-label">Foto de Perfil</label>
                                        <input type="file" class="form-control form-control-sm" id="imagen" name="imagen" accept="image/*">
                                        <small class="text-muted">Formatos: JPG, PNG (Máx. 2MB)</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Datos de Usuario -->
                        <div class="col-md-4">
                            <div class="card h-100 border-0 shadow-sm">
                                <div class="card-header bg-light">
                                    <h6 class="mb-0 fw-bold text-primary">
                                        <i class="fas fa-user-circle me-2"></i>Datos de Usuario
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="mb-3">
                                        <label for="usuario" class="form-label fw-semibold">Nombre de Usuario <span class="text-danger">*</span></label>
                                        <input type="text" class="form-control form-control-sm" id="usuario" name="usuario" required placeholder="Nombre de usuario">
                                    </div>
                                    <div class="mb-3">
                                        <label for="contrasenia" class="form-label fw-semibold">Contraseña <span class="text-danger">*</span></label>
                                        <div class="input-group">
                                            <input type="password" class="form-control form-control-sm" id="contrasenia" name="contrasenia" required placeholder="Contraseña segura">
                                            <button class="btn btn-outline-secondary btn-sm" type="button" id="togglePassword">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                        <small class="text-muted">Mínimo 8 caracteres</small>
                                    </div>
                                    <div class="row g-2">
                                        <div class="col-md-6 mb-3">
                                            <label for="idRol" class="form-label fw-semibold">Rol <span class="text-danger">*</span></label>
                                            <select class="form-select form-select-sm" id="idRol" name="idRol" required>
                                                <option value="">Seleccione...</option>
                                            </select>
                                        </div>
                                        <div class="col-md-6 mb-3">
                                            <label for="idGrupo" class="form-label fw-semibold">Grupo <span class="text-danger">*</span></label>
                                            <select class="form-select form-select-sm" id="idGrupo" name="idGrupo" required>
                                                <option value="">Seleccione...</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer bg-light">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i> Cancelar
                    </button>
                    <button type="submit" class="btn btn-primary px-4">
                        <span id="registrarSpinner" class="spinner-border spinner-border-sm d-none me-1" role="status" aria-hidden="true"></span>
                        <i class="fas fa-save me-1"></i> Registrar
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
            function checkDependencies() {
                const errors = [];
                if (typeof jQuery === 'undefined') errors.push('jQuery no está cargado');
                if (!$.fn.dataTable) errors.push('DataTables core no está cargado');
                if (!$.fn.dataTable.Buttons) errors.push('DataTables Buttons no está cargado');
                return errors;
            }

            const dependencyErrors = checkDependencies();
            if (dependencyErrors.length > 0) {
                console.error('Errores de dependencia:', dependencyErrors.join(', '));
                return;
            }

            if (!$('#tablaUsuarios').length) return;

            function mostrarLoader() {
                const loaderContext = {
                    minimumTimeElapsed: false,
                    checkReadyToClose: function() {
                        if (this.minimumTimeElapsed && dataLoaded) {
                            loader.close();
                        }
                    }
                };

                const loader = Swal.fire({
                    title: 'Cargando...',
                    html: 'Por favor espere mientras se cargan los datos',
                    allowOutsideClick: false,
                    timerProgressBar: true,
                    didOpen: () => {
                        Swal.showLoading();
                        loaderContext.minimumTimer = setTimeout(() => {
                            loaderContext.minimumTimeElapsed = true;
                            loaderContext.checkReadyToClose();
                        }, 1000);
                    },
                    willClose: () => {
                        clearTimeout(loaderContext.minimumTimer);
                    }
                });

                // Asignamos la función de cierre al loader
                loader.checkReadyToClose = loaderContext.checkReadyToClose.bind(loaderContext);
                return loader;
            }

            const loader = mostrarLoader();
            let dataLoaded = false;

            window.dataTableInstance = $('#tablaUsuarios').DataTable({
                responsive: false,
                dom: '<"row mb-3"<"col-md-6"B><"col-md-6"f>>' +
                     '<"row"<"col-md-12"tr>>' +
                     '<"row mt-3"<"col-md-6"l><"col-md-6"p>>',
                    language: {
                        buttons: {
                            excel: 'Exportar a Excel',
                            print: 'Imprimir'
                        },
                        "decimal": "",
                        "emptyTable": "No hay datos disponibles en la tabla",
                        "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                        "infoEmpty": "Mostrando 0 a 0 de 0 registros",
                        "infoFiltered": "(filtrado de _MAX_ registros totales)",
                        "infoPostFix": "",
                        "thousands": ",",
                        "lengthMenu": "Ver _MENU_ registros",
                        "loadingRecords": "Cargando...",
                        "processing": "Procesando...",
                        "search": "Buscar:",
                        "zeroRecords": "No se encontraron registros coincidentes.",
                        "paginate": {
                            "first": "Primero",
                            "last": "Último",
                            "next": "Siguiente",
                            "previous": "Anterior"
                        },
                        "aria": {
                            "sortAscending": ": activar para ordenar la columna ascendente",
                            "sortDescending": ": activar para ordenar la columna descendente"
                        }
                    },
                buttons: [
                    {
                        extend: 'excelHtml5',
                                text: '<i class="fas fa-file-excel me-2"></i> Excel',
                                className: 'btn btn-success btn-sm',
                                title: 'Listado de Usuarios',
                                exportOptions: {
                                    columns: [1, 3, 4, 5, 6, 7, 8, 9]
                                },
                                action: function(e, dt, button, config) {
                                    // Mostrar alerta de confirmación primero
                                    Swal.fire({
                                        title: 'Exportar a Excel',
                                        text: '¿Desea generar el reporte en Excel?',
                                        icon: 'question',
                                        showCancelButton: true,
                                        confirmButtonText: 'Exportar',
                                        cancelButtonText: 'Cancelar',
                                        position: 'center'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            // Ejecutar exportación
                                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);

                                            // Alert de éxito
                                            setTimeout(() => {
                                                Swal.fire({
                                                    title: '¡Listo!',
                                                    text: 'Exportación completada con éxito',
                                                    icon: 'success',
                                                    confirmButtonText: 'Aceptar',
                                                    position: 'center',
                                                    timer: 3000,
                                                    timerProgressBar: true,
                                                    showConfirmButton: true
                                                });
                                            }, 2000);
                                        }
                                    });
                                }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print me-2"></i> Imprimir',
                        className: 'btn btn-info btn-sm',
                        title: 'Listado de Usuarios',
                        exportOptions: {
                            columns: [1, 3, 4, 5, 6, 7, 8, 9]
                        },
                        action: function(e, dt, button, config) {
                            Swal.fire({
                                title: 'Preparando impresión',
                                text: '¿Desea generar la vista para imprimir?',
                                icon: 'question',
                                showCancelButton: true,
                                confirmButtonText: 'Imprimir',
                                cancelButtonText: 'Cancelar',
                                position: 'center',
                                backdrop: true
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    Swal.fire({
                                        title: 'Preparando documento',
                                        html: 'Por favor espere...',
                                        timerProgressBar: true,
                                        didOpen: () => {
                                            Swal.showLoading();
                                        },
                                        allowOutsideClick: false,
                                        position: 'center'
                                    });

                                    setTimeout(() => {
                                        $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, button, config);

                                        setTimeout(() => {
                                            Swal.fire({
                                                title: 'Impresión lista',
                                                text: 'El documento se ha preparado para imprimir',
                                                icon: 'success',
                                                confirmButtonText: 'Aceptar',
                                                position: 'center',
                                                timer: 3000,
                                                timerProgressBar: true
                                            });
                                        }, 500);
                                    }, 1000);
                                }
                            });
                        },
                        customize: function(win) {
                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', '10pt');

                            $(win.document.body).find('h1')
                                .css('text-align', 'center')
                                .css('font-size', '16pt');
                        }
                    }
                ],
                order: [[0, 'asc']],
                columnDefs: [
                    {
                        targets: [1, 10],
                        orderable: false,
                        searchable: false
                    },
                    {
                        targets: "_all",
                        className: "align-middle"
                    }
                ],
                initComplete: function() {
                    dataLoaded = true;
                    loader.checkReadyToClose = function() {
                        if (this.minimumTimeElapsed && dataLoaded) {
                            loader.close();
                        }
                    };
                    loader.checkReadyToClose();

                    $('.dataTables_filter input')
                        .addClass('form-control form-control-sm')
                        .attr('placeholder', 'Buscar usuario...')
                        .wrap('<div class="position-relative" style="width: 300px;"></div>')
                        .before('<i class="fas fa-search position-absolute" style="right: 15px; top: 50%; transform: translateY(-50%); color: #6c757d;"></i>')
                        .css({
                            'width': '100%',
                            'padding-right': '35px'
                        });

                    $('.dataTables_filter label').contents().filter(function() {
                        return this.nodeType === 3;
                    }).remove();

                    $('.dataTables_length select')
                        .addClass('form-select form-select-sm')
                        .css('width', '80px');
                }
            });

            setTimeout(() => {
                loader.minimumTimeElapsed = true;
                loader.checkReadyToClose && loader.checkReadyToClose();
            }, 1500);

            window.dataTableInstance.buttons().container()
                .appendTo($('.col-md-6:eq(0)', window.dataTableInstance.table().container()))
                .addClass('btn-group');

            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });

            // Evento de refresh
            $('#btnRefresh').on('click', function() {
                location.reload();
            });


            $('#registrarUsuarioModal').on('show.bs.modal', function() {
                cargarRoles();
                cargarGrupo();
            });

            $('#modalEditar').on('show.bs.modal', function() {
                cargarRoles();
            });

            $('#registrarUsuarioForm').submit(function(e) {
                e.preventDefault();
                registrarUsuario();
            });
    });

    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('contrasenia');
        const icon = this.querySelector('i');
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.replace('fa-eye', 'fa-eye-slash');
        } else {
            passwordInput.type = 'password';
            icon.classList.replace('fa-eye-slash', 'fa-eye');
        }
    });

     function cargarRoles() {
            $.ajax({
                url: '@Url.Action("ObtenerRoles", "Usuarios")',
                type: 'GET',
                success: function(response) {
                    $('#idRol').empty().append('<option value="">Seleccione un rol...</option>');
                    $.each(response, function(i, rol) {
                        $('#idRol').append($('<option>', {
                            value: rol.idRol,
                            text: rol.nombre
                        }));
                    });
                    if (idRolSeleccionado) {
                        $('#idRol').val(idRolSeleccionado);
                    }
                },
                error: function() {
                    toastr.error('Error al cargar los roles');
                }
            });
     }

     function cargarGrupo() {
            $.ajax({
                url: '@Url.Action("ObtenerGrupos", "Usuarios")',
                type: 'GET',
                success: function(response) {
                    $('#idGrupo').empty().append('<option value="">Seleccione un grupo...</option>');
                    $.each(response, function(i, grupo) {
                        $('#idGrupo').append($('<option>', {
                            value: grupo.idGrupo,
                            text: grupo.nombre
                        }));
                    });
                },
                error: function() {
                    toastr.error('Error al cargar los Grupos');
                }
            });
     }

     function generarId() {
        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        let result = '';
        for (let i = 0; i < 8; i++) {
            result += chars.charAt(Math.floor(Math.random() * chars.length));
        }
        return result;
     }

    function registrarUsuario() {
        var formData = new FormData($('#registrarUsuarioForm')[0]);

        // Generar IDs
        formData.append('idEmpleado', generarId());

        // Mostrar spinner
        $('#registrarSpinner').removeClass('d-none');

        $.ajax({
            url: '@Url.Action("RegistrarEmpleado", "Usuarios")',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                if (response.success) {
                    // Mostrar alerta con temporizador
                    Swal.fire({
                        title: '¡Registro Exitoso!',
                        text: response.message,
                        icon: 'success',
                        timer: 1500, 
                        timerProgressBar: true,
                        showConfirmButton: false,
                        willClose: () => {
                            // Acciones al cerrarse el alert
                            $('#registrarUsuarioModal').modal('hide');
                            window.location.reload();
                        }
                    });
                } else {
                    toastr.error(response.message);
                }
            },
            error: function(xhr) {
                toastr.error('Error al registrar el usuario: ' + xhr.responseText);
            },
            complete: function() {
                $('#registrarSpinner').addClass('d-none');
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });

    document.addEventListener('DOMContentLoaded', function() {
        const lightbox = GLightbox({
            touchNavigation: true,
            loop: true,
            moreText: 'Ver más',
            moreLength: 100,
            closeButton: true
        });


        $(document).on('click', '.btn-edit', function () {
            var idEmpleado = $(this).data('id');

            $.ajax({
                url: '/Usuarios/ObtenerEmpleadoPorID',
                type: 'GET',
                data: { idEmpleado: idEmpleado },
                success: function (res) {
                    if (res.success) {
                        // Llenas los campos del modal
                        $('#txtIdEmpleado').val(res.data.idEmpleado);
                        $('#txtDni').val(res.data.dni);
                        $('#txtNombres').val(res.data.nombres);
                        $('#txtApePat').val(res.data.apePat);
                        $('#txtApeMat').val(res.data.apeMat);
                        $('#txtFechaNacimiento').val(res.data.fechaNacimiento);
                        $('#cboGenero').val(res.data.genero);
                        $('#txtTelefono').val(res.data.telefono);
                        $('#txtDireccion').val(res.data.direccion);
                        $('#txtDepartamento').val(res.data.departamento);
                        $('#txtProvincia').val(res.data.provincia);
                        $('#txtDistrito').val(res.data.distrito);
                        $('#txtEstadoCivil').val(res.data.estadoCivil);
                        $('#txtUsuario').val(res.data.usuario);
                        $('#txtEmail').val(res.data.email);
                       
                        cargarRoles(res.data.idRol);

                        // Preview de imagen si existe
                        if (res.data.imagePath) {
                            $('#previewImagen').attr('src', 'data:image/png;base64,' + res.data.imagePath).show();
                        } else {
                            $('#previewImagen').hide();
                        }

                        $('#modalEditar').modal('show');
                    } else {
                        Swal.fire('Error', res.message, 'error');
                    }
                },
                error: function () {
                    Swal.fire('Error', 'Error al obtener los datos', 'error');
                }
            });
        });

        $(document).on('click', '#btnGuardarCambios', function () {
            var formData = new FormData();

            formData.append('idEmpleado', $('#txtIdEmpleado').val());
            formData.append('telefono', $('#txtTelefono').val());
            formData.append('genero', $('#cboGenero').val());
            formData.append('fechaNacimiento', $('#txtFechaNacimiento').val());
            formData.append('estadoCivil', $('#txtEstadoCivil').val());
            formData.append('usuario', $('#txtUsuario').val());
            formData.append('direccion', $('#txtDireccion').val());
            formData.append('email', $('#txtEmail').val());
            formData.append('idRol', $('#idRol').val());
            formData.append('departamento', $('#txtDepartamento').val());
            formData.append('provincia', $('#txtProvincia').val());
            formData.append('distrito', $('#txtDistrito').val());

            // Adjuntar imagen si el usuario seleccionó una
            if ($('#imagenEditar')[0].files.length > 0) {
                formData.append('imagen', $('#imagenEditar')[0].files[0]);
            }

            Swal.fire({
                title: '¿Guardar cambios?',
                text: 'Se actualizarán los datos del empleado.',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Guardar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {

                    $.ajax({
                        url: '/Usuarios/ActualizarEmpleado',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (res) {
                            if (res.success) {
                                Swal.fire('¡Actualizado!', res.message, 'success').then(() => {
                                    $('#modalEditar').modal('hide');
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Error', res.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Error', 'Ocurrió un error al actualizar', 'error');
                        }
                    });

                }
            });
        });


    });
</script>
