@model List<dynamic>
@{
    ViewData["Title"] = "Todos los Campos por Cliente";
}

<style>
    .avatar-container {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .avatar-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
        border: 2px solid #e9ecef;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(13, 110, 253, 0.05);
        transition: background-color 0.2s ease;
    }

    .dataTables_wrapper .dataTables_filter input {
        border: 1px solid #dee2e6;
        border-radius: 20px;
        padding: 5px 15px;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.075);
        transition: all 0.3s;
    }

        .dataTables_wrapper .dataTables_filter input:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
            outline: 0;
        }

    .dataTables_wrapper .dataTables_length select {
        border: 1px solid #dee2e6;
        border-radius: 5px;
        padding: 3px 10px;
    }

    .dataTables_wrapper .dataTables_paginate .paginate_button {
        border: 1px solid transparent;
        border-radius: 5px;
        padding: 5px 10px;
        margin: 0 2px;
        transition: all 0.3s;
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #e9ecef;
            border-color: #dee2e6;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current {
            background: #0d6efd;
            color: white !important;
            border-color: #0d6efd;
        }

    .dataTables_wrapper .dataTables_info {
        padding-top: 8px;
        color: #6c757d;
    }

    .dt-buttons .btn {
        border-radius: 20px;
        padding: 5px 15px;
        margin-right: 5px;
        font-size: 0.8rem;
    }

    #btnRefresh {
        border-radius: 20px;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-action {
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
    }

    .avatar-container {
        display: inline-block;
        transition: transform 0.3s ease;
    }

        .avatar-container:hover {
            transform: scale(1.05);
        }

    .avatar-img {
        max-width: 100px;
        max-height: 100px;
        object-fit: cover;
        border: 2px solid #ddd;
        transition: all 0.3s ease;
    }

        .avatar-img:hover {
            border-color: #0d6efd;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .badge-indicator {
        background-color: rgba(0,0,0,0.03);
        border-radius: 0.375rem;
        transition: all 0.2s;
    }

        .badge-indicator:hover {
            background-color: rgba(0,0,0,0.07);
            transform: translateY(-1px);
        }
</style>

<div class="card shadow border-0 rounded-3">
    <div class="card-header bg-primary bg-gradient text-white">
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="mb-0">
                <i class="fas fa-users me-2"></i> @ViewData["Title"]
            </h3>
            <div class="d-flex gap-2 align-items-center">
                <span class="badge bg-white text-primary shadow-sm d-flex align-items-center py-2"
                      data-bs-toggle="tooltip"
                      data-bs-placement="top"
                      title="Total de registos Cargados."
                      style="min-width: fit-content;">
                    <i class="fas fa-database me-1 d-none d-sm-inline"></i>
                    <span class="d-none d-sm-inline">Total:</span>
                    <span class="ms-sm-1">@ViewBag.TotalRegistros</span>
                    <span class="d-none d-md-inline ms-sm-1">Registros</span>
                </span>
                <button id="btnRefresh" class="btn btn-light btn-sm" title="Actualizar lista">
                    <i class="fas fa-sync-alt"></i>
                </button>
                <button id="btnAddClient" class="btn btn-success btn-sm" title="Agregar nuevo cliente" data-bs-toggle="modal" data-bs-target="#registrarUsuarioModal">
                    <i class="fas fa-plus me-1"></i> Nuevo
                </button>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i> @ViewBag.Error
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="table-responsive">
            <table id="tablaCampos" class="table table-hover table-striped w-100">
                <thead class="bg-light">
                    <tr>
                        <th>Código Cliente</th>
                        <th>Cliente</th>
                        <th>Código Campo</th>
                        <th>Campo</th>
                        <th>Orden</th>
                        <th>Estado</th>
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var campo in Model)
                    {

                        <tr>
                            <td>@campo.ID_CLIENTE</td>
                            <td>
                                <div class="fw-bold">@campo.NOMBRE</div>
                            </td>
                            <td>@campo.ID_CAMPO</td>
                            <td>
                                <div class="fw-bold">@campo.CAMPO</div>
                            </td>
                            <td>@(campo.ORDEN ?? "—")</td>
                            <td>
                                @if (campo.ESTADO == 1)
                                {
                                    <span class="badge bg-success bg-opacity-10 text-success fw-bold rounded-pill px-3 py-2 border border-success border-opacity-25 shadow-sm">
                                        <i class="fas fa-check-circle me-1"></i> Activo
                                    </span>
                                }
                                else if (campo.ESTADO == 2)
                                {
                                    <span class="badge bg-danger bg-opacity-10 text-danger fw-bold rounded-pill px-3 py-2 border border-danger border-opacity-25 shadow-sm">
                                        <i class="fas fa-times-circle me-1"></i> Inactivo
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary bg-opacity-10 text-secondary fw-bold rounded-pill px-3 py-2 border border-secondary border-opacity-25 shadow-sm">
                                        <i class="fas fa-question-circle me-1"></i> Desconocido
                                    </span>
                                }
                            </td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm" role="group">
                                    <button class="btn btn-outline-success btn-action btn-edit" data-id="@campo.ID_CAMPO" title="Editar">
                                        <i class="far fa-edit"></i>
                                    </button>
                                    <button class="btn btn-outline-danger btn-action btn-delete" data-id="@campo.ID_CAMPO" title="Eliminar">
                                        <i class="far fa-trash-alt"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- MODAL PARA REGISTRAR CAMPOS -->
<div class="modal fade" id="registrarUsuarioModal" tabindex="-1" aria-labelledby="registrarUsuarioModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow rounded-4 overflow-hidden">
            <!-- Encabezado estilizado -->
            <div class="modal-header bg-primary bg-gradient text-white py-4 px-4">
                <div class="w-100">
                    <h5 class="modal-title fs-4 fw-bold mb-1" id="registrarUsuarioModalLabel">Asignar Nuevo Campo</h5>
                    <p class="small mb-0 opacity-75">Complete todos los campos requeridos</p>
                </div>
                <button type="button" class="btn-close btn-close-white shadow-none" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <form id="registrarUsuarioForm" enctype="multipart/form-data">
                <div class="modal-body p-0">
                    <div class="row g-0">
                        <!-- Columna Izquierda -->
                        <div class="col-lg-6 p-4 bg-white">
                            <div class="card h-100 border-0 shadow-none">
                                <div class="card-header bg-transparent border-0 px-0 pt-0">
                                    <h6 class="mb-3 fw-bold text-primary">Información Básica</h6>
                                </div>
                                <div class="card-body px-0 pt-2">
                                    <!-- Cliente -->
                                    <div class="mb-4">
                                        <label for="idCliente" class="form-label fw-semibold small text-muted mb-1">CLIENTE <span class="text-danger">*</span></label>
                                        <div class="input-group">
                                            <span class="input-group-text bg-light border-end-0">
                                                <i class="fas fa-building text-primary"></i>
                                            </span>
                                            <select class="form-select form-select-lg border-start-0 ps-3" id="idCliente" name="idCliente" required style="height: 46px;">
                                                <option value="" selected disabled>Seleccione un cliente...</option>
                                            </select>
                                        </div>
                                    </div>

                                    <!-- Campo -->
                                    <div class="mb-3">
                                        <label for="idCampo" class="form-label fw-semibold small text-muted mb-1">CAMPO <span class="text-danger">*</span></label>
                                        <div class="input-group">
                                            <span class="input-group-text bg-light border-end-0">
                                                <i class="fas fa-map-marked-alt text-primary"></i>
                                            </span>
                                            <select class="form-select form-select-lg border-start-0 ps-3" id="idCampo" name="idCampo" required disabled style="height: 46px;">
                                                <option value="" selected disabled>Primero seleccione un cliente...</option>
                                            </select>
                                        </div>
                                        <small class="text-muted mt-1 d-block">Seleccione el campo de monitoreo</small>
                                    </div>

                                    <!-- Orden -->
                                    <div class="mb-3">
                                        <label for="orden" class="form-label fw-semibold small text-muted mb-1">ORDEN (Opcional)</label>
                                        <div class="input-group">
                                            <span class="input-group-text bg-light border-end-0">
                                                <i class="fas fa-sort-numeric-up text-primary"></i>
                                            </span>
                                            <input type="number" min="1" class="form-control form-control-lg border-start-0 ps-3" id="orden" name="orden" placeholder="Ejemplo: 1, 2, 3..." style="height: 46px;">
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <!-- Columna Derecha con fondo y mensaje -->
                        <div class="col-lg-6 bg-light d-flex align-items-center justify-content-center p-4">
                            <div class="text-center">
                                <img src="https://cdn-icons-png.flaticon.com/512/3193/3193015.png" alt="Ilustración neutra" class="img-fluid mb-3" style="max-height: 140px;">
                                <p class="small text-muted">Asegúrate de completar todos los campos correctamente antes de registrar.</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="px-4 pt-2 pb-0">
                    <div class="alert alert-info small">
                        <i class="fas fa-info-circle me-2"></i>
                        Los campos generales no requieren un orden específico. Si deseas definir un orden personalizado, puedes indicarlo.
                    </div>
                </div>

                <!-- Footer -->
                <div class="modal-footer bg-light border-top px-4 py-3">
                    <button type="button" class="btn btn-outline-secondary rounded-pill px-4 py-2" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i> Cancelar
                    </button>
                    <button type="submit" class="btn btn-primary rounded-pill px-4 py-2 shadow-sm">
                        <span id="registrarClienteSpinner" class="spinner-border spinner-border-sm d-none me-2" role="status"></span>
                        <i class="fas fa-save me-2"></i> Registrar Cliente
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>




<script>
    document.addEventListener('DOMContentLoaded', function() {
            function checkDependencies() {
                const errors = [];
                if (typeof jQuery === 'undefined') errors.push('jQuery no está cargado');
                if (!$.fn.dataTable) errors.push('DataTables core no está cargado');
                if (!$.fn.dataTable.Buttons) errors.push('DataTables Buttons no está cargado');
                return errors;
            }

            const dependencyErrors = checkDependencies();
            if (dependencyErrors.length > 0) {
                console.error('Errores de dependencia:', dependencyErrors.join(', '));
                return;
            }

            if (!$('#tablaCampos').length) return;

            function mostrarLoader() {
                return Swal.fire({
                    title: 'Cargando...',
                    html: 'Por favor espere mientras se cargan los datos',
                    allowOutsideClick: false,
                    timerProgressBar: true,
                    didOpen: function () {
                        Swal.showLoading();
                        this.minimumTimer = setTimeout(() => {
                            minimumTimeElapsed = true;
                        }, 1000);
                    },
                    willClose: () => {
                        clearTimeout(this.minimumTimer);
                    }
                });
            }

            const loader = mostrarLoader();
            let dataLoaded = false;

            window.dataTableInstance = $('#tablaCampos').DataTable({
                responsive: true,
                dom: '<"row mb-3"<"col-md-6"B><"col-md-6"f>>' +
                     '<"row"<"col-md-12"tr>>' +
                     '<"row mt-3"<"col-md-6"l><"col-md-6"p>>',
                    language: {
                        buttons: {
                            excel: 'Exportar a Excel',
                            print: 'Imprimir'
                        },
                        "decimal": "",
                        "emptyTable": "No hay datos disponibles en la tabla",
                        "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                        "infoEmpty": "Mostrando 0 a 0 de 0 registros",
                        "infoFiltered": "(filtrado de _MAX_ registros totales)",
                        "infoPostFix": "",
                        "thousands": ",",
                        "lengthMenu": "Ver _MENU_ registros",
                        "loadingRecords": "Cargando...",
                        "processing": "Procesando...",
                        "search": "Buscar:",
                        "zeroRecords": "No se encontraron registros coincidentes.",
                        "paginate": {
                            "first": "Primero",
                            "last": "Último",
                            "next": "Siguiente",
                            "previous": "Anterior"
                        },
                        "aria": {
                            "sortAscending": ": activar para ordenar la columna ascendente",
                            "sortDescending": ": activar para ordenar la columna descendente"
                        }
                    },
                buttons: [
                    {
                        extend: 'excelHtml5',
                                text: '<i class="fas fa-file-excel me-2"></i> Excel',
                                className: 'btn btn-success btn-sm',
                                title: 'Listado de Campos por Cliente',
                                exportOptions: {
                                    columns: [0, 1, 2, 3, 4, 5]
                                },
                                action: function(e, dt, button, config) {
                                    Swal.fire({
                                        title: 'Exportar a Excel',
                                        text: '¿Desea generar el reporte en Excel?',
                                        icon: 'question',
                                        showCancelButton: true,
                                        confirmButtonText: 'Exportar',
                                        cancelButtonText: 'Cancelar',
                                        position: 'center'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);

                                            setTimeout(() => {
                                                Swal.fire({
                                                    title: '¡Listo!',
                                                    text: 'Exportación completada con éxito',
                                                    icon: 'success',
                                                    confirmButtonText: 'Aceptar',
                                                    position: 'center',
                                                    timer: 3000,
                                                    timerProgressBar: true,
                                                    showConfirmButton: true
                                                });
                                            }, 2000);
                                        }
                                    });
                                }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print me-2"></i> Imprimir',
                        className: 'btn btn-info btn-sm',
                        title: 'Listado de Campos por Cliente',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5]
                        },
                        action: function(e, dt, button, config) {
                            Swal.fire({
                                title: 'Preparando impresión',
                                text: '¿Desea generar la vista para imprimir?',
                                icon: 'question',
                                showCancelButton: true,
                                confirmButtonText: 'Imprimir',
                                cancelButtonText: 'Cancelar',
                                position: 'center',
                                backdrop: true
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    Swal.fire({
                                        title: 'Preparando documento',
                                        html: 'Por favor espere...',
                                        timerProgressBar: true,
                                        didOpen: () => {
                                            Swal.showLoading();
                                        },
                                        allowOutsideClick: false,
                                        position: 'center'
                                    });

                                    setTimeout(() => {
                                        $.fn.dataTable.ext.buttons.print.action.call(this, e, dt, button, config);

                                        setTimeout(() => {
                                            Swal.fire({
                                                title: 'Impresión lista',
                                                text: 'El documento se ha preparado para imprimir',
                                                icon: 'success',
                                                confirmButtonText: 'Aceptar',
                                                position: 'center',
                                                timer: 3000,
                                                timerProgressBar: true
                                            });
                                        }, 500);
                                    }, 1000);
                                }
                            });
                        },
                        customize: function(win) {
                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', '10pt');

                            $(win.document.body).find('h1')
                                .css('text-align', 'center')
                                .css('font-size', '16pt');
                        }
                    }
                ],
                order: [[0]],
                columnDefs: [
                    {
                        targets: [6],
                        orderable: false
                    },
                    {
                        targets: "_all",
                        className: "align-middle"
                    }
                ],
                initComplete: function() {
                    dataLoaded = true;
                    loader.checkReadyToClose = function() {
                        if (this.minimumTimeElapsed && dataLoaded) {
                            loader.close();
                        }
                    };
                    loader.checkReadyToClose();

                    $('.dataTables_filter input')
                        .addClass('form-control form-control-sm')
                        .attr('placeholder', 'Buscar campo...')
                        .wrap('<div class="position-relative" style="width: 300px;"></div>')
                        .before('<i class="fas fa-search position-absolute" style="right: 15px; top: 50%; transform: translateY(-50%); color: #6c757d;"></i>')
                        .css({
                            'width': '100%',
                            'padding-right': '35px'
                        });

                    $('.dataTables_filter label').contents().filter(function() {
                        return this.nodeType === 3;
                    }).remove();

                    $('.dataTables_length select')
                        .addClass('form-select form-select-sm')
                        .css('width', '80px');
                }
            });
            setTimeout(() => {
                loader.minimumTimeElapsed = true;
                loader.checkReadyToClose && loader.checkReadyToClose();
            }, 1500);

            window.dataTableInstance.buttons().container()
                .appendTo($('.col-md-6:eq(0)', window.dataTableInstance.table().container()))
                .addClass('btn-group');

            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer);
                    toast.addEventListener('mouseleave', Swal.resumeTimer);
                }
            });

            // Evento de refresh
            $('#btnRefresh').on('click', function() {
                location.reload();
            });


            $('#registrarUsuarioModal').on('show.bs.modal', function() {
                cargarCliente();
                $('#idCampo').empty().append('<option value="">Primero seleccione un cliente...</option>');
                $('#idCampo').prop('disabled', true);
            });

            $('#registrarUsuarioForm').submit(function(e) {
                e.preventDefault();
                registrarUsuario();
            });
    });

    function cargarCliente() {
        $.ajax({
            url: '@Url.Action("ObtenerClientes", "Campos")',
            type: 'GET',
            success: function(response) {
                $('#idCliente').empty().append('<option value="">Seleccione un cliente...</option>');
                $.each(response, function(i, cliente) {
                    $('#idCliente').append($('<option>', {
                        value: cliente.idClie,
                        text: cliente.nombre
                    }));
                });

                // Evento cuando cambia la selección de cliente
                $('#idCliente').off('change').on('change', function() {
                    var idCliente = $(this).val();
                    if (idCliente) {
                        cargarCamposPorCliente(idCliente);
                        $('#idCampo').prop('disabled', false);
                    } else {
                        $('#idCampo').empty().append('<option value="">Primero seleccione un cliente...</option>');
                        $('#idCampo').prop('disabled', true);
                    }
                });
            },
            error: function() {
                toastr.error('Error al cargar los Clientes');
            }
        });
    }

    function cargarCamposPorCliente(idCliente) {
        $.ajax({
            url: '@Url.Action("ObtenerCamposPorCliente", "Campos")',
            type: 'GET',
            data: { idCliente: idCliente },
            beforeSend: function() {
                $('#idCampo').empty().append('<option value="">Cargando campos...</option>');
            },
            success: function(response) {
                $('#idCampo').empty();
                if (response && response.length > 0) {
                    $('#idCampo').append('<option value="">Seleccione un campo...</option>');
                    $.each(response, function(i, campo) {
                        $('#idCampo').append($('<option>', {
                            value: campo.idCampo,
                            text: campo.nombre
                        }));
                    });
                } else {
                    $('#idCampo').append('<option value="">No hay campos disponibles para este cliente</option>');
                }
            },
            error: function() {
                toastr.error('Error al cargar los Campos');
                $('#idCampo').empty().append('<option value="">Error al cargar campos</option>');
            }
        });
    }

    function registrarUsuario() {
        var formData = {
            idCliente: $('#idCliente').val(),
            idCampo: $('#idCampo').val(),
            orden: $('#orden').val() || null
        };

        $('#registrarClienteSpinner').removeClass('d-none');

        $.ajax({
            url: '@Url.Action("RegistrarCampoCliente", "Campos")',
            type: 'POST',
            data: formData,
            success: function(response) {
                $('#registrarClienteSpinner').addClass('d-none');
                if (response.success) {
                    Swal.fire('Éxito', response.message, 'success').then(() => {
                        $('#registrarUsuarioModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire('Error', response.message, 'error');
                }
            },
            error: function() {
                $('#registrarClienteSpinner').addClass('d-none');
                Swal.fire('Error', 'Ocurrió un error al intentar registrar el campo.', 'error');
            }
        });
    }



    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });

</script>
